// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id
  email         String        @unique
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  twitterId     String?       @unique
  linkedinId    String?       @unique
  twitterToken  String?       @db.Text
  linkedinToken String?       @db.Text
  subscription  Subscription?
  syncHistory   SyncHistory[]
  settings      UserSettings?
}

model Subscription {
  id        String    @id @default(cuid())
  userId    String    @unique
  plan      String    @default("FREE") // FREE, PRO, ENTERPRISE
  status    String    @default("ACTIVE") // ACTIVE, CANCELLED, EXPIRED
  startDate DateTime  @default(now())
  endDate   DateTime?
  user      User      @relation(fields: [userId], references: [id])
}

model SyncHistory {
  id              String   @id @default(cuid())
  userId          String
  tweetId         String
  linkedinPostId  String?
  content         String   @db.Text
  modifiedContent String?  @db.Text
  status          String // SUCCESS, FAILED, PENDING, RETRYING
  error           String?  @db.Text
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  retryCount      Int      @default(0)
  user            User     @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([status])
}

model UserSettings {
  id                String   @id @default(cuid())
  userId            String   @unique
  autoSync          Boolean  @default(true)
  useAiModification Boolean  @default(false)
  aiTone            String? // PROFESSIONAL, CASUAL, FORMAL
  excludedKeywords  String[] // Keywords to skip syncing
  maxRetries        Int      @default(3)
  user              User     @relation(fields: [userId], references: [id])
}
